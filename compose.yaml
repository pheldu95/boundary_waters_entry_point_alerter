services:
###> doctrine/doctrine-bundle ###
  # PHP/Symfony Application
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_php
    volumes:
      # Mount your entire project directory
      - .:/var/www/html
      # Override the vendor directory with the one from the image
      - /var/www/html/vendor
    ports:
      - "8080:80"  # Apache runs on port 80
    environment:
      # Add your Symfony environment variables here
      DATABASE_URL: mysql://${MYSQL_USER:-app}:${MYSQL_PASSWORD:-!ChangeMe!}@database:3306/${MYSQL_DATABASE:-app}
      MESSENGER_TRANSPORT_DSN: amqp://guest:guest@rabbitmq:5672/%2f/messages
    depends_on:
      - database
      - rabbitmq
    networks:
      - symfony_network


  database:
    image: mysql:${MYSQL_VERSION:-8.0}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-!ChangeMe!}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-!ChangeMe!}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/mysql:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/mysql:rw
    ports:
      - "3307:3306"
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: boundary_waters_entry_point_alerter_rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - symfony_network
###< doctrine/doctrine-bundle ###

networks:
  symfony_network:
    driver: bridge
volumes:
###> doctrine/doctrine-bundle ###
  database_data:
  rabbitmq_data:
###< doctrine/doctrine-bundle ###